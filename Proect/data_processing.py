# data_processing.py

import math
import re
import logging

logger = logging.getLogger(__name__)

def try_convert(value):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ."""
    if value is None or value == "ERROR:#VALUE!":
        logger.debug(f"üö´ –ó–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ: {value}")
        return None, None
    if isinstance(value, (int, float)):
        converted = math.ceil(value) if value != int(value) else int(value)
        logger.debug(f"üî¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ —á–∏—Å–ª–æ: {value} ‚Üí {converted}")
        return converted, '0'
    if isinstance(value, str):
        value = value.strip()
        if '/' in value and value.replace('/', '', 1).isdigit():
            converted = int(value.split('/')[0])
            logger.debug(f"üî¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –¥—Ä–æ–±–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {value} ‚Üí {converted}")
            return converted, '0'
        try:
            num = float(value.replace(',', '.'))
            converted = math.ceil(num) if num != int(num) else int(num)
            logger.debug(f"üî¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: {value} ‚Üí {converted}")
            return converted, '0'
        except ValueError:
            logger.debug(f"üî§ –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É: {value}")
            return value, None
    logger.debug(f"üîÅ –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {value}")
    return value, None

def extract_thickness_value(text, keyword):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—â–∏–Ω—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞."""
    try:
        pattern = re.compile(rf"{re.escape(keyword)}[^\d]*([\d,\.]+)")
        matches = pattern.findall(text.lower())
        if matches:
            value = float(matches[-1].replace(',', '.'))
            logger.debug(f"üìê –ò–∑–≤–ª–µ—á–µ–Ω–∞ —Ç–æ–ª—â–∏–Ω–∞: {value}")
            return value
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —Ç–æ–ª—â–∏–Ω—ã: {e}")
    return None

def get_section_name(cell_value):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏."""
    if not isinstance(cell_value, str):
        return None
    match = re.search(r'section:\s*(.+?)(?:\s*—Ç–æ–ª—â–∏–Ω–∞|thickness|$)', cell_value.lower())
    if match:
        logger.debug(f"üîñ –ò–∑–≤–ª–µ—á–µ–Ω–æ –∏–º—è —Å–µ–∫—Ü–∏–∏: {match.group(1).strip()}")
        return match.group(1).strip()
    return None